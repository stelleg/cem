rotate = \n.\xs.(xs (error "empty rotate") \x.\xs.(splitAt (- n 1) xs \a.\b.(append a (cons x b))))
perms = \l.(foldr \n.\ls.(concatMap \l.(take n (iterate (rotate n) l)) ls) 
  (cons l nil) (range 2 (length l)))
rev = \xs.(xs (error "empty rev") \x.\xs.(splitAt (- x 1) xs 
  \a.\b.(append (reverse a) (cons x b))))
flop = (Y \flop.\xs.(xs (error "empty flop") \h.\t.(= h 1 0 (+ 1 (flop (rev xs))))))
fannuch = \xs.(foldl max 0 (map flop xs))

main = (>>= getArgs \args.{n = [readInt head args]
  ps = [perms (range 1) n]}
  (>> [putStr unlines [map concatMap showInt] (take 30) ps] 
  (printf "Pfannkuchen(%d) = %d" n (fannuch ps))))
