# getdents system call
sys_getdents = \fd.\dirent.\count.\w.[w fd dirent count \c.\d.\f.(\t.\w._!3 78)]
ls = \dirname.
  (>>= newPage \dirents.
  (>>= (open dirname) \fd.
  (>>= (sys_getdents fd dirents pageSize) \e.
  (e != 0 (error (sprintf "ls failed: %d" e)) (readStrBuf (dirents + 24) pageSize)))))
        
# pipe system call
sys_pipe = \fdes.\w.[w fdes \f.(\t.\w._!1 22)]
pipe = (>>= newPage \fdes.
       (>> (sys_pipe fdes) 
       (>>= rdl fdes \n1.(rdl (fdes + 4)) \n2.(pair n1 n2))))

# Shell takes a line and executes it after splitting it into words
shell = \line.(words line (return 0) \cmd.\args.
  (>>= sys_fork \n.(n = 0 
    (>> (>>= getEnv (exec cmd args)) (sys_exit 0))
    (sys_wait n))))

# Looks for the command in the PATH environment
envMap = (map (split (= '=')) getEnv)
paths = (lookup "PATH" strcmp envMap "path not found!" (splitWhen (= ':')))

# Extracts all possible commands using ls output
commands = (mapm (âˆ˜ shell (append "/usr/bin/ls ")) paths)

# Quits on ctrl-d (eof), otherwise returns the line
getLineOrQuit = (>>= getContents \s.(
                (takeWhile (!= '\n') s)
                  (error "goodbye")
                  \h.\t.(return (: h t))))

# Loops forever on getLines and shells
main = (forever 
  (>> (putStr "> ")
  (>>= getLineOrQuit shell)))
