aux = (Y \aux.\n.[(: 1) (: n) (: 1) aux (n + 2)])

eContFrac = [(: 2) aux 2]

ratTrans = (Y \ratTrans.\a.\b.\c.\d.\xs.(\q.(and
      (or (signum c = (signum d)) (abs c < (abs d)))
      (and (c + d * q <= (a + b))  (c + d * (q + 1) > (a + b)))
    (: q (ratTrans c d (a - (q * c)) (b - (q * d))  xs))
    (ratTrans b (a + (head xs * b)) d (c + (head xs * d)) (tail xs)))
  (b / d)))

toDigits = (Y \toDigits.\l.(l (error "Pattern match") 
  \h.\t.(: h (toDigits (ratTrans 10 0 0 1 t)))))

e = (toDigits eContFrac)

main = (>> (putStr "Enter number of digits: ")
       (>>= (return "1000") \i.
       (print (take (readInt i) (concatMap showInt e)))))
