# Recursion!
Y = \g.(\x.[g x x] \x.[g x x])

# Boolean integer comparisons
= = \n.\m.\t.\f.[m n \n.\m._=]
!= = \n.\m.\t.\f.[m n \n.\m._\=]
>= = \n.\m.\t.\f.[m n \n.\m._>=]
<= = \n.\m.\t.\f.[m n \n.\m._<=]
< = \n.\m.\t.\f.[m n \n.\m._<]
> = \n.\m.\t.\f.[m n \n.\m._>]

# Arithmetic
+ = \n.\m.[m n \n.\m._+]
- = \n.\m.[m n \n.\m._-]
-' = (0 -)
* = \n.\m.[m n \n.\m._*]
/ = \n.\m.[m n \n.\m._/]
% = \n.\m.[m n \n.\m._%]

# Booleans
true = \t.\f.t
false = \t.\f.f

# Pairs
fst = true
snd = false

f = (Y \f.(\fact.\fib.\p.(p
      \n.(n < 2 n (fact (n - 1) * n))
      \m.(m < 3 m (fib (m - 1) + (fib (m - 2))))
    (f fst) (f snd))))
fact = (f fst)
fib = (f snd)
main = \w.\p.(fact 10 + (fib 10))
