nq = [readInt head getArgs]
safe = (Y \safe.\x.\d.\qs.(qs True 
  \q.\l.[(and (not [x q =]))
         (and (not [x [q d +] =]))
         (and (not [x [q d -] =]))
         (safe x [d 1 +] l)]))
gen = (Y \gen.\n.([n 0 =] (Cons Nil Nil) (concatMap \b.(concatMap \q.(safe q 1 b 
  (Cons (Cons q b) Nil) Nil) (range 1 nq)) (gen [n 1 -]))))

[putStrLn showInt length gen nq]
